{
    "version": "Notebook/1.0",
    "items": [
      {
        "type": 1,
        "content": {
          "json": "## Azure AD Security Config Analyzer (AADSCA)\n---\n\n### Introduction\n\nThis workbook provides insights into Azure Active Directory tenant configurations. The workbook compares current tenant configurations against best practices, and displays the compliance status of each configuration. The best practices are based on community work (see [Azure AD Attack and Defense GitHub repo](https://raw.githubusercontent.com/Cloud-Architekt/AzureAD-Attack-Defense/Chapter6-AadSecConfig/config/AadSecConfig.json) for details). You can also apply your own recommended values by taking a copy of the metadata JSON file, and updating the queries in this workbook to utilize the customized version.\n\nIn addition to providing best practices, each configuration is mapped to [MITRE ATT&CK framework](https://attack.mitre.org/), allowing you to to identify potentially vulnerable configurations in terms of tactics and techniques. \n\n### Pre-requisites\nThis workbook requires Azure AD tenant configurations to be imported into a Log Analytics workspace. There are multiple ways of doing this, see [Azure AD - Attack and Defense Playbook](https://github.com/Cloud-Architekt/AzureAD-Attack-Defense) for more information.\n\n### Notes\n**Status** can have the following values:\n- *Passed:* The configuration is compliant with the recommended value.\n- *Failed:* The configuration is not compliant with the recommended value. The severity of the finding is *High* (this is shown in the tooltip).\n- *Review:* The configuration is not compliant with the recommended value. The severity of the finding is *Medium* (this is shown in the tooltip).\n- *Verify:* The configuration needs to be manually verified. The severity of the finding is *Medium* or *High* (this is shown in the tooltip).\n- *Informational:* There are no security implications with this configuration, and therefore is only considered informational in this context.\n"
        },
        "customWidth": "60",
        "name": "Introduction"
      },
      {
        "type": 9,
        "content": {
          "version": "KqlParameterItem/1.0",
          "parameters": [
            {
              "id": "4666895c-a22c-4fad-be1c-a8d31c4383d9",
              "version": "KqlParameterItem/1.0",
              "name": "SelectLogAnalytics",
              "label": "Select Log Analytics Workspace",
              "type": 5,
              "isRequired": true,
              "query": "resources\r\n| where type == \"microsoft.operationalinsights/workspaces\"\r\n| project id",
              "crossComponentResources": [
                "value::selected"
              ],
              "typeSettings": {
                "additionalResourceOptions": []
              },
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "value": ""
            },
            {
              "id": "ce036b1b-59f0-4c96-9945-9ceab96e8cd2",
              "version": "KqlParameterItem/1.0",
              "name": "SelectControlAreas",
              "label": "Select Control Areas",
              "type": 2,
              "isRequired": true,
              "multiSelect": true,
              "quote": "'",
              "delimiter": ",",
              "typeSettings": {
                "additionalResourceOptions": [
                  "value::all"
                ],
                "showDefault": false
              },
              "jsonData": "[\r\n { \"value\": \"AuthorizationPolicy\", \"label\": \"Authorization Policy\" },\r\n { \"value\": \"AuthMethodMSAuthenticator\", \"label\": \"Authentication Methods: Microsoft Authenticator\" },\r\n { \"value\": \"AuthMethodFIDO2\", \"label\": \"Authentication Methods: FIDO2 security key\" },\r\n { \"value\": \"AuthMethodTAP\", \"label\": \"Authentication Methods: Temporary Access Pass\" },\r\n { \"value\": \"AuthMethod3rdParty\", \"label\": \"Authentication Methods: Third-party software OAUTH tokens\" },\r\n { \"value\": \"AuthMethodEmailOTP\", \"label\": \"Authentication Methods: Email OTP\" },\r\n { \"value\": \"AuthMethodVoiceCall\", \"label\": \"Authentication Methods: Voice call\" },\r\n { \"value\": \"AuthMethodSMS\", \"label\": \"Authentication Methods: SMS\" },\r\n { \"value\": \"AuthMethodCert\", \"label\": \"Authentication Methods: Certificate-based authentication\" },\r\n  { \"value\": \"ConsentPolicySettings\", \"label\": \"Consent Policy Settings\" }\r\n]",
              "timeContext": {
                "durationMs": 86400000
              },
              "defaultValue": "value::all",
              "value": [
                "value::all"
              ]
            },
            {
              "id": "7b852907-8e03-45c7-85df-9438ec4c9b64",
              "version": "KqlParameterItem/1.0",
              "name": "ShowAuthorizationPolicy",
              "label": "Show Authorization Policy",
              "type": 1,
              "isHiddenWhenLocked": true,
              "criteriaData": [
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "contains",
                    "rightValType": "static",
                    "rightVal": "AuthorizationPolicy",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "==",
                    "rightValType": "static",
                    "rightVal": "All",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "operator": "Default",
                    "resultValType": "static",
                    "resultVal": "False"
                  }
                }
              ],
              "timeContext": {
                "durationMs": 86400000
              }
            },
            {
              "version": "KqlParameterItem/1.0",
              "name": "ShowAuthMethodMSAuthenticator",
              "type": 1,
              "isHiddenWhenLocked": true,
              "criteriaData": [
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "contains",
                    "rightValType": "static",
                    "rightVal": "AuthMethodMSAuthenticator",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "==",
                    "rightValType": "static",
                    "rightVal": "All",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "operator": "Default",
                    "resultValType": "static",
                    "resultVal": "False"
                  }
                }
              ],
              "timeContext": {
                "durationMs": 86400000
              },
              "id": "2a1be2e6-87ef-47b0-ac1a-0ae5ad670bc8"
            },
            {
              "version": "KqlParameterItem/1.0",
              "name": "ShowAuthMethodFIDO2",
              "type": 1,
              "isHiddenWhenLocked": true,
              "criteriaData": [
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "contains",
                    "rightValType": "static",
                    "rightVal": "AuthMethodFIDO2",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "==",
                    "rightValType": "static",
                    "rightVal": "All",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "operator": "Default",
                    "resultValType": "static",
                    "resultVal": "False"
                  }
                }
              ],
              "timeContext": {
                "durationMs": 86400000
              },
              "id": "ee8528ce-1ebc-40cd-96cf-e02c18a57472"
            },
            {
              "version": "KqlParameterItem/1.0",
              "name": "ShowAuthMethodTAP",
              "type": 1,
              "isHiddenWhenLocked": true,
              "criteriaData": [
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "contains",
                    "rightValType": "static",
                    "rightVal": "AuthMethodTAP",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "==",
                    "rightValType": "static",
                    "rightVal": "All",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "operator": "Default",
                    "resultValType": "static",
                    "resultVal": "False"
                  }
                }
              ],
              "timeContext": {
                "durationMs": 86400000
              },
              "id": "5564fb57-e110-4179-95ef-8216f43136bb"
            },
            {
              "version": "KqlParameterItem/1.0",
              "name": "ShowAuthMethod3rdParty",
              "type": 1,
              "isHiddenWhenLocked": true,
              "criteriaData": [
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "contains",
                    "rightValType": "static",
                    "rightVal": "AuthMethod3rdParty",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "==",
                    "rightValType": "static",
                    "rightVal": "All",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "operator": "Default",
                    "resultValType": "static",
                    "resultVal": "False"
                  }
                }
              ],
              "timeContext": {
                "durationMs": 86400000
              },
              "id": "90de6f06-492f-45a8-9a4f-7875a585267c"
            },
            {
              "version": "KqlParameterItem/1.0",
              "name": "ShowAuthMethodEmailOTP",
              "type": 1,
              "isHiddenWhenLocked": true,
              "criteriaData": [
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "contains",
                    "rightValType": "static",
                    "rightVal": "AuthMethodEmailOTP",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "==",
                    "rightValType": "static",
                    "rightVal": "All",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "operator": "Default",
                    "resultValType": "static",
                    "resultVal": "False"
                  }
                }
              ],
              "timeContext": {
                "durationMs": 86400000
              },
              "id": "0e09573d-54ef-4538-988b-d3b072431cc5"
            },
            {
              "version": "KqlParameterItem/1.0",
              "name": "ShowAuthMethodVoiceCall",
              "type": 1,
              "isHiddenWhenLocked": true,
              "criteriaData": [
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "contains",
                    "rightValType": "static",
                    "rightVal": "AuthMethodVoiceCall",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "==",
                    "rightValType": "static",
                    "rightVal": "All",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "operator": "Default",
                    "resultValType": "static",
                    "resultVal": "False"
                  }
                }
              ],
              "timeContext": {
                "durationMs": 86400000
              },
              "id": "9f91c872-ac0e-444d-a1ab-8c64eca87a34"
            },
            {
              "version": "KqlParameterItem/1.0",
              "name": "ShowAuthMethodSMS",
              "type": 1,
              "isHiddenWhenLocked": true,
              "criteriaData": [
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "contains",
                    "rightValType": "static",
                    "rightVal": "AuthMethodSMS",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "==",
                    "rightValType": "static",
                    "rightVal": "All",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "operator": "Default",
                    "resultValType": "static",
                    "resultVal": "False"
                  }
                }
              ],
              "timeContext": {
                "durationMs": 86400000
              },
              "id": "f9da2232-f3cd-4f90-ac46-9a4e1af97d54"
            },
            {
              "version": "KqlParameterItem/1.0",
              "name": "ShowAuthMethodCert",
              "type": 1,
              "isHiddenWhenLocked": true,
              "criteriaData": [
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "contains",
                    "rightValType": "static",
                    "rightVal": "AuthMethodCert",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "==",
                    "rightValType": "static",
                    "rightVal": "All",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "operator": "Default",
                    "resultValType": "static",
                    "resultVal": "False"
                  }
                }
              ],
              "timeContext": {
                "durationMs": 86400000
              },
              "id": "4b7d860e-c815-47f0-96a2-20869c017a8e"
            },
            {
              "id": "aef5f92d-71c5-4457-aee1-ca8886beee4a",
              "version": "KqlParameterItem/1.0",
              "name": "JsonMetadataUrl",
              "label": "Metadata JSON for AADSCA",
              "type": 1,
              "isRequired": true,
              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n { \\\"value\\\": \\\"https://raw.githubusercontent.com/Cloud-Architekt/AzureAD-Attack-Defense/Chapter6-AadSecConfig/config/AadSecConfig.json\\\" }\\r\\n]\",\"transformers\":null}",
              "isHiddenWhenLocked": true,
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 8
            },
            {
              "id": "4541f21f-5521-49ee-8ee9-a878ed4520ed",
              "version": "KqlParameterItem/1.0",
              "name": "CustomTableName",
              "label": "Custom table name for AADSCA",
              "type": 1,
              "isRequired": true,
              "query": "{\"version\":\"1.0.0\",\"content\":\"[\\r\\n { \\\"value\\\": \\\"AADSCA_CL\\\" }\\r\\n]\",\"transformers\":null}",
              "isHiddenWhenLocked": true,
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 8
            },
            {
              "version": "KqlParameterItem/1.0",
              "name": "ShowConsentPolicySettings",
              "type": 1,
              "isHiddenWhenLocked": true,
              "criteriaData": [
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "contains",
                    "rightValType": "static",
                    "rightVal": "ConsentPolicySettings",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "leftOperand": "SelectControlAreas",
                    "operator": "==",
                    "rightValType": "static",
                    "rightVal": "All",
                    "resultValType": "static",
                    "resultVal": "True"
                  }
                },
                {
                  "criteriaContext": {
                    "operator": "Default",
                    "resultValType": "static",
                    "resultVal": "False"
                  }
                }
              ],
              "timeContext": {
                "durationMs": 86400000
              },
              "id": "d6592b79-69a8-43c8-b5b6-77780f9ed605"
            }
          ],
          "style": "pills",
          "queryType": 8
        },
        "customWidth": "50",
        "name": "Parameters"
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "{CustomTableName}\r\n| where _odata_context_s == \"https://graph.microsoft.com/beta/$metadata#policies/authorizationPolicy\"\r\n| summarize arg_max(TimeGenerated, *)\r\n| extend ConfigSet = parse_json(value_s)\r\n| project-away value_s\r\n| mv-expand ConfigTmp = ConfigSet[0]\r\n| mv-expand SubConfig = ConfigTmp[\"defaultUserRolePermissions\"]\r\n| extend ConfigName = case( \r\n    SubConfig == \"\", tostring(bag_keys(ConfigTmp)[0]),\r\n    tostring(bag_keys(SubConfig)[0])\r\n)\r\n| extend ConfigValue = case(\r\n    SubConfig == \"\", strcat_array(ConfigTmp[tostring(ConfigName)],\",\"),\r\n    tostring((SubConfig[ConfigName]))\r\n)\r\n| where ConfigName !in (\"id\", \"description\", \"displayName\")\r\n| project ConfigName, ConfigValue //, ConfigSet, ConfigTmp, SubConfig\r\n| join kind=leftouter (\r\nexternaldata(ControlName: string, Description: string, GraphEndpoint: string, GraphUri: string, MitreTactic: dynamic, MitreTechnique: dynamic, MitreMitigation: dynamic, Controls: dynamic )\r\n[ \r\n    h@'{JsonMetadataUrl}'\r\n]\r\nwith(format='multijson')\r\n| where GraphEndpoint == \"authorizationPolicy\"\r\n// Control group level Mitre mappings (will be consolidated with the control level mappings)\r\n| extend g_MitreTactic = MitreTactic\r\n| extend g_MitreTechnique = MitreTechnique\r\n| extend g_MitreMitigation = MitreMitigation\r\n| project-away MitreTactic, MitreTechnique, MitreMitigation\r\n| mv-expand Control = Controls\r\n| project-away Controls\r\n| evaluate bag_unpack(Control, columnsConflict='replace_source')\r\n// Consolidate control level and control group level Mitre mappings\r\n| extend t_MitreTactic = array_sort_asc(array_concat(g_MitreTactic, MitreTactic))\r\n| extend t_MitreTechnique = array_sort_asc(array_concat(g_MitreTechnique, MitreTechnique))\r\n| extend t_MitreMitigation = array_sort_asc(array_concat(g_MitreMitigation, MitreMitigation))\r\n| project ConfigName = tostring(Name), DisplayName, Description, DefaultValue, RecommendedValue, Recommendation, Severity, t_MitreTactic, t_MitreTechnique, t_MitreMitigation, PortalDeepLink\r\n) on ConfigName\r\n| extend ControlCompliance = case(\r\n    ConfigValue == \"\" and RecommendedValue  == \"\", \"Compliant\",\r\n    ConfigValue != \"\" and RecommendedValue  == \"\", \"Unknown\",\r\n    ConfigValue == RecommendedValue, \"Compliant\",\r\n    ConfigValue != RecommendedValue, \"NonCompliant\",\r\n    \"Unknown\"\r\n)\r\n| extend Status = case(\r\n    ControlCompliance == \"Compliant\", \"Passed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"High\", \"Failed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"Medium\", \"Review\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"High\", \"Verify\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"Medium\", \"Verify\",\r\n    Severity == \"Informational\", \"Informational\",\r\n    \"Verify\"\r\n)\r\n| extend StatusTooltip = case(\r\n    Status == \"Passed\", \"The current configuration is compliant with the recommendation.\",\r\n    Status == \"Failed\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Review\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Verify\", strcat(\"Unable to determine, whether the current configuration is compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Informational\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    Status == \"Unknown\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    \"Unknown\"\r\n)\r\n| extend RecommendationLink = case(\r\n    Recommendation startswith \"http\", Recommendation,\r\n    \"\"\r\n)\r\n| extend RecommendationTooltip = Recommendation\r\n| project ['Configuration'] = ConfigName, ['Display name'] = DisplayName, ['Current value'] = ConfigValue, ['Recommended value'] = RecommendedValue, Recommendation, RecommendationLink, RecommendationTooltip, ['Default value'] = DefaultValue, Severity, Status, StatusTooltip, ['Mitre tactics'] = t_MitreTactic, ['Mitre techniques'] = t_MitreTechnique, ['Mitre mitigations'] = t_MitreMitigation, Description, PortalDeepLink",
          "size": 2,
          "showAnalytics": true,
          "title": "Authorization Policy",
          "timeContext": {
            "durationMs": 86400000
          },
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "crossComponentResources": [
            "{SelectLogAnalytics}"
          ],
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "Configuration",
                "formatter": 0,
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Display name",
                "formatter": 0,
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Current value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "PortalDeepLink",
                  "linkTarget": "Url",
                  "customColumnWidthSetting": "150px"
                },
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Recommended value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "RecommendationLink",
                  "linkTarget": "Url",
                  "customColumnWidthSetting": "150px"
                },
                "tooltipFormat": {
                  "tooltip": "[\"RecommendationTooltip\"]"
                }
              },
              {
                "columnMatch": "Recommendation",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationLink",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationTooltip",
                "formatter": 5
              },
              {
                "columnMatch": "Default value",
                "formatter": 0,
                "formatOptions": {
                  "customColumnWidthSetting": "150px"
                }
              },
              {
                "columnMatch": "Severity",
                "formatter": 5
              },
              {
                "columnMatch": "Status",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Passed",
                      "representation": "success",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Failed",
                      "representation": "4",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Review",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Verify",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Informational",
                      "representation": "1",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "unknown",
                      "text": "{0}{1}"
                    }
                  ]
                },
                "tooltipFormat": {
                  "tooltip": "[\"StatusTooltip\"]"
                }
              },
              {
                "columnMatch": "StatusTooltip",
                "formatter": 5
              },
              {
                "columnMatch": "Description",
                "formatter": 5
              },
              {
                "columnMatch": "PortalDeepLink",
                "formatter": 5
              }
            ]
          }
        },
        "conditionalVisibility": {
          "parameterName": "ShowAuthorizationPolicy",
          "comparison": "isEqualTo",
          "value": "True"
        },
        "customWidth": "100",
        "name": "AuthorizationPolicyQuery",
        "styleSettings": {
          "showBorder": true
        }
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "{CustomTableName}\r\n//| where _odata_context_s has \"authenticationMethodConfigurations\"\r\n| where _odata_type_s == \"#microsoft.graph.microsoftAuthenticatorAuthenticationMethodConfiguration\"\r\n| extend ConfigType = _odata_type_s\r\n| summarize arg_max(TimeGenerated, *)\r\n| join kind=leftouter (\r\nexternaldata(ControlName: string, Description: string, GraphEndpoint: string, GraphUri: string, MitreTactic: dynamic, MitreTechnique: dynamic, MitreMitigation: dynamic, Controls: dynamic )\r\n[ \r\n    h@'{JsonMetadataUrl}'\r\n]\r\nwith(format='multijson')\r\n| where GraphUri == \"https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('MicrosoftAuthenticator')\"\r\n// Control group level Mitre mappings (will be consolidated with the control level mappings)\r\n| extend g_MitreTactic = MitreTactic\r\n| extend g_MitreTechnique = MitreTechnique\r\n| extend g_MitreMitigation = MitreMitigation\r\n| project-away MitreTactic, MitreTechnique, MitreMitigation\r\n| mv-expand Control = Controls\r\n| extend ConfigType = \"#microsoft.graph.microsoftAuthenticatorAuthenticationMethodConfiguration\"\r\n| project-away Controls\r\n| evaluate bag_unpack(Control, columnsConflict='replace_source')\r\n| extend ConfigMapping = replace_string(CurrentValue, \".\", \"_\")\r\n// Consolidate control level and control group level Mitre mappings\r\n| extend t_MitreTactic = array_sort_asc(array_concat(g_MitreTactic, MitreTactic))\r\n| extend t_MitreTechnique = array_sort_asc(array_concat(g_MitreTechnique, MitreTechnique))\r\n| extend t_MitreMitigation = array_sort_asc(array_concat(g_MitreMitigation, MitreMitigation))\r\n| project ConfigName = tostring(Name), ConfigMapping, ConfigType, DisplayName, Description, DefaultValue, RecommendedValue, Recommendation, Severity, t_MitreTactic, t_MitreTechnique, t_MitreMitigation, PortalDeepLink\r\n) on ConfigType\r\n| extend ConfigGroup = case(\r\n    ConfigName startswith \"numberMatching\", \"Require number matching for push notifications\",\r\n    ConfigName startswith \"displayAppInformation\", \"Show application name in push and passwordless notifications\",\r\n    ConfigName startswith \"displayLocationInformation\", \"Show geographic location in push and passwordless notifications\",\r\n    \"General settings\"\r\n)\r\n| extend Pack = pack_all()\r\n| extend ConfigValue = case(\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_s\")])), tostring(Pack[strcat(ConfigMapping, \"_s\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_g\")])), tostring(Pack[strcat(ConfigMapping, \"_g\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_b\")])), tostring(Pack[strcat(ConfigMapping, \"_b\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_d\")])), tostring(Pack[strcat(ConfigMapping, \"_d\")]),\r\n    tostring(Pack[strcat(ConfigMapping, \"_s\")])\r\n)\r\n| extend ControlCompliance = case(\r\n    ConfigValue == \"\" and RecommendedValue  == \"\", \"Compliant\",\r\n    ConfigValue != \"\" and RecommendedValue  == \"\", \"Unknown\",\r\n    ConfigValue == RecommendedValue, \"Compliant\",\r\n    ConfigValue != RecommendedValue, \"NonCompliant\",\r\n    \"Unknown\"\r\n)\r\n| extend Status = case(\r\n    ControlCompliance == \"Compliant\", \"Passed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"High\", \"Failed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"Medium\", \"Review\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"High\", \"Verify\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"Medium\", \"Verify\",\r\n    Severity == \"Informational\", \"Informational\",\r\n    \"Verify\"\r\n)\r\n| extend StatusTooltip = case(\r\n    Status == \"Passed\", \"The current configuration is compliant with the recommendation.\",\r\n    Status == \"Failed\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Review\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Verify\", strcat(\"Unable to determine, whether the current configuration is compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Informational\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    Status == \"Unknown\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    \"Unknown\"\r\n)\r\n| extend RecommendationLink = case(\r\n    Recommendation startswith \"http\", Recommendation,\r\n    \"\"\r\n)\r\n| extend RecommendationTooltip = Recommendation\r\n| project ConfigName, ['Display name'] = DisplayName, ['Current value'] = ConfigValue, ['Recommended value'] = RecommendedValue, ['Default value'] = DefaultValue, Status, Severity, Recommendation, RecommendationLink, RecommendationTooltip, Description, ['Mitre tactics'] = t_MitreTactic, ['Mitre techniques'] = t_MitreTechnique, ['Mitre mitigations'] = t_MitreMitigation, PortalDeepLink, Configuration = ConfigGroup",
          "size": 0,
          "showAnalytics": true,
          "title": "Authentication Methods: Microsoft Authenticator",
          "timeContext": {
            "durationMs": 86400000
          },
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "crossComponentResources": [
            "{SelectLogAnalytics}"
          ],
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "Group",
                "formatter": 1
              },
              {
                "columnMatch": "ConfigName",
                "formatter": 5
              },
              {
                "columnMatch": "Display name",
                "formatter": 0,
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Current value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "PortalDeepLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Recommended value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "RecommendationLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"RecommendationTooltip\"]"
                }
              },
              {
                "columnMatch": "Status",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Passed",
                      "representation": "success",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Failed",
                      "representation": "4",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Verify",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Review",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Informational",
                      "representation": "1",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "unknown",
                      "text": "{0}{1}"
                    }
                  ]
                }
              },
              {
                "columnMatch": "Severity",
                "formatter": 5
              },
              {
                "columnMatch": "Recommendation",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationLink",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationTooltip",
                "formatter": 5
              },
              {
                "columnMatch": "Description",
                "formatter": 5
              },
              {
                "columnMatch": "PortalDeepLink",
                "formatter": 5
              },
              {
                "columnMatch": "Configuration",
                "formatter": 0,
                "formatOptions": {
                  "customColumnWidthSetting": "75px"
                },
                "tooltipFormat": {
                  "tooltip": "Used for grouping the controls to reflect the Azure Portal experience"
                }
              }
            ],
            "hierarchySettings": {
              "treeType": 1,
              "groupBy": [
                "Configuration"
              ],
              "expandTopLevel": true,
              "finalBy": "ConfigName"
            },
            "labelSettings": [
              {
                "columnId": "Configuration",
                "label": "Portal"
              }
            ]
          }
        },
        "conditionalVisibility": {
          "parameterName": "ShowAuthMethodMSAuthenticator",
          "comparison": "isEqualTo",
          "value": "True"
        },
        "name": "AuthMethodsMicrosoftAuthenticator",
        "styleSettings": {
          "showBorder": true
        }
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "{CustomTableName}\r\n//| where _odata_context_s has \"authenticationMethodConfigurations\"\r\n| where _odata_type_s == \"#microsoft.graph.fido2AuthenticationMethodConfiguration\"\r\n| extend ConfigType = _odata_type_s\r\n| summarize arg_max(TimeGenerated, *)\r\n| join kind=leftouter (\r\nexternaldata(ControlName: string, Description: string, GraphEndpoint: string, GraphUri: string, MitreTactic: dynamic, MitreTechnique: dynamic, MitreMitigation: dynamic, Controls: dynamic )\r\n[ \r\n    h@'{JsonMetadataUrl}'\r\n]\r\nwith(format='multijson')\r\n| where GraphUri == \"https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('Fido2')\"\r\n// Control group level Mitre mappings (will be consolidated with the control level mappings)\r\n| extend g_MitreTactic = MitreTactic\r\n| extend g_MitreTechnique = MitreTechnique\r\n| extend g_MitreMitigation = MitreMitigation\r\n| project-away MitreTactic, MitreTechnique, MitreMitigation\r\n| mv-expand Control = Controls\r\n| extend ConfigType = \"#microsoft.graph.fido2AuthenticationMethodConfiguration\"\r\n| project-away Controls\r\n| evaluate bag_unpack(Control, columnsConflict='replace_source')\r\n| extend ConfigMapping = replace_string(CurrentValue, \".\", \"_\")\r\n// Consolidate control level and control group level Mitre mappings\r\n| extend t_MitreTactic = array_sort_asc(array_concat(g_MitreTactic, MitreTactic))\r\n| extend t_MitreTechnique = array_sort_asc(array_concat(g_MitreTechnique, MitreTechnique))\r\n| extend t_MitreMitigation = array_sort_asc(array_concat(g_MitreMitigation, MitreMitigation))\r\n| project ConfigName = tostring(Name), ConfigMapping, ConfigType, DisplayName, Description, DefaultValue, RecommendedValue, Recommendation, Severity, t_MitreTactic, t_MitreTechnique, t_MitreMitigation, PortalDeepLink\r\n) on ConfigType\r\n| extend ConfigGroup = case(\r\n    ConfigName startswith \"numberMatching\", \"Require number matching for push notifications\",\r\n    ConfigName startswith \"displayAppInformation\", \"Show application name in push and passwordless notifications\",\r\n    ConfigName startswith \"displayLocationInformation\", \"Show geographic location in push and passwordless notifications\",\r\n    \"General settings\"\r\n)\r\n| extend Pack = pack_all()\r\n| extend ConfigValue = case(\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_s\")])), tostring(Pack[strcat(ConfigMapping, \"_s\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_g\")])), tostring(Pack[strcat(ConfigMapping, \"_g\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_b\")])), tostring(Pack[strcat(ConfigMapping, \"_b\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_d\")])), tostring(Pack[strcat(ConfigMapping, \"_d\")]),\r\n    tostring(Pack[strcat(ConfigMapping, \"_s\")])\r\n)\r\n| extend ControlCompliance = case(\r\n    ConfigValue == \"\" and RecommendedValue  == \"\", \"Compliant\",\r\n    ConfigValue != \"\" and RecommendedValue  == \"\", \"Unknown\",\r\n    ConfigValue == RecommendedValue, \"Compliant\",\r\n    ConfigValue != RecommendedValue, \"NonCompliant\",\r\n    \"Unknown\"\r\n)\r\n| extend Status = case(\r\n    ControlCompliance == \"Compliant\", \"Passed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"High\", \"Failed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"Medium\", \"Review\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"High\", \"Verify\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"Medium\", \"Verify\",\r\n    Severity == \"Informational\", \"Informational\",\r\n    \"Verify\"\r\n)\r\n| extend StatusTooltip = case(\r\n    Status == \"Passed\", \"The current configuration is compliant with the recommendation.\",\r\n    Status == \"Failed\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Review\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Verify\", strcat(\"Unable to determine, whether the current configuration is compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Informational\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    Status == \"Unknown\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    \"Unknown\"\r\n)\r\n| extend RecommendationLink = case(\r\n    Recommendation startswith \"http\", Recommendation,\r\n    \"\"\r\n)\r\n| extend RecommendationTooltip = Recommendation\r\n| project ConfigName, ['Display name'] = DisplayName, ['Current value'] = ConfigValue, ['Recommended value'] = RecommendedValue, ['Default value'] = DefaultValue, Status, Severity, Recommendation, RecommendationLink, RecommendationTooltip, Description, ['Mitre tactics'] = t_MitreTactic, ['Mitre techniques'] = t_MitreTechnique, ['Mitre mitigations'] = t_MitreMitigation, PortalDeepLink, Configuration = ConfigGroup",
          "size": 0,
          "showAnalytics": true,
          "title": "Authentication Methods: FIDO2 security key",
          "timeContext": {
            "durationMs": 86400000
          },
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "crossComponentResources": [
            "{SelectLogAnalytics}"
          ],
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "Group",
                "formatter": 1
              },
              {
                "columnMatch": "ConfigName",
                "formatter": 5
              },
              {
                "columnMatch": "Display name",
                "formatter": 0,
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Current value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "PortalDeepLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Recommended value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "RecommendationLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"RecommendationTooltip\"]"
                }
              },
              {
                "columnMatch": "Status",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Passed",
                      "representation": "success",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Failed",
                      "representation": "4",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Verify",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Review",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Informational",
                      "representation": "1",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "unknown",
                      "text": "{0}{1}"
                    }
                  ]
                }
              },
              {
                "columnMatch": "Severity",
                "formatter": 5
              },
              {
                "columnMatch": "Recommendation",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationLink",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationTooltip",
                "formatter": 5
              },
              {
                "columnMatch": "Description",
                "formatter": 5
              },
              {
                "columnMatch": "PortalDeepLink",
                "formatter": 5
              },
              {
                "columnMatch": "Configuration",
                "formatter": 0,
                "formatOptions": {
                  "customColumnWidthSetting": "75px"
                },
                "tooltipFormat": {
                  "tooltip": "Used for grouping the controls to reflect the Azure Portal experience"
                }
              }
            ],
            "hierarchySettings": {
              "treeType": 1,
              "groupBy": [
                "Configuration"
              ],
              "expandTopLevel": true,
              "finalBy": "ConfigName"
            }
          }
        },
        "conditionalVisibility": {
          "parameterName": "ShowAuthMethodFIDO2",
          "comparison": "isEqualTo",
          "value": "True"
        },
        "name": "AuthMethodsFIDO2",
        "styleSettings": {
          "showBorder": true
        }
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "{CustomTableName}\r\n//| where _odata_context_s has \"authenticationMethodConfigurations\"\r\n| where _odata_type_s == \"#microsoft.graph.temporaryAccessPassAuthenticationMethodConfiguration\"\r\n| extend ConfigType = _odata_type_s\r\n| summarize arg_max(TimeGenerated, *)\r\n| join kind=leftouter (\r\nexternaldata(ControlName: string, Description: string, GraphEndpoint: string, GraphUri: string, MitreTactic: dynamic, MitreTechnique: dynamic, MitreMitigation: dynamic, Controls: dynamic )\r\n[ \r\n    h@'{JsonMetadataUrl}'\r\n]\r\nwith(format='multijson')\r\n| where GraphUri == \"https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('TemporaryAccessPass')\"\r\n// Control group level Mitre mappings (will be consolidated with the control level mappings)\r\n| extend g_MitreTactic = MitreTactic\r\n| extend g_MitreTechnique = MitreTechnique\r\n| extend g_MitreMitigation = MitreMitigation\r\n| project-away MitreTactic, MitreTechnique, MitreMitigation\r\n| mv-expand Control = Controls\r\n| extend ConfigType = \"#microsoft.graph.temporaryAccessPassAuthenticationMethodConfiguration\"\r\n| project-away Controls\r\n| evaluate bag_unpack(Control, columnsConflict='replace_source')\r\n| extend ConfigMapping = replace_string(CurrentValue, \".\", \"_\")\r\n// Consolidate control level and control group level Mitre mappings\r\n| extend t_MitreTactic = array_sort_asc(array_concat(g_MitreTactic, MitreTactic))\r\n| extend t_MitreTechnique = array_sort_asc(array_concat(g_MitreTechnique, MitreTechnique))\r\n| extend t_MitreMitigation = array_sort_asc(array_concat(g_MitreMitigation, MitreMitigation))\r\n| project ConfigName = tostring(Name), ConfigMapping, ConfigType, DisplayName, Description, DefaultValue, RecommendedValue, Recommendation, Severity, t_MitreTactic, t_MitreTechnique, t_MitreMitigation, PortalDeepLink\r\n) on ConfigType\r\n| extend ConfigGroup = case(\r\n    ConfigName startswith \"numberMatching\", \"Require number matching for push notifications\",\r\n    ConfigName startswith \"displayAppInformation\", \"Show application name in push and passwordless notifications\",\r\n    ConfigName startswith \"displayLocationInformation\", \"Show geographic location in push and passwordless notifications\",\r\n    \"General settings\"\r\n)\r\n| extend Pack = pack_all()\r\n| extend ConfigValue = case(\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_s\")])), tostring(Pack[strcat(ConfigMapping, \"_s\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_g\")])), tostring(Pack[strcat(ConfigMapping, \"_g\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_b\")])), tostring(Pack[strcat(ConfigMapping, \"_b\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_d\")])), tostring(Pack[strcat(ConfigMapping, \"_d\")]),\r\n    tostring(Pack[strcat(ConfigMapping, \"_s\")])\r\n)\r\n| extend ControlCompliance = case(\r\n    ConfigValue == \"\" and RecommendedValue  == \"\", \"Compliant\",\r\n    ConfigValue != \"\" and RecommendedValue  == \"\", \"Unknown\",\r\n    ConfigValue == RecommendedValue, \"Compliant\",\r\n    ConfigValue != RecommendedValue, \"NonCompliant\",\r\n    \"Unknown\"\r\n)\r\n| extend Status = case(\r\n    ControlCompliance == \"Compliant\", \"Passed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"High\", \"Failed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"Medium\", \"Review\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"High\", \"Verify\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"Medium\", \"Verify\",\r\n    Severity == \"Informational\", \"Informational\",\r\n    \"Verify\"\r\n)\r\n| extend StatusTooltip = case(\r\n    Status == \"Passed\", \"The current configuration is compliant with the recommendation.\",\r\n    Status == \"Failed\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Review\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Verify\", strcat(\"Unable to determine, whether the current configuration is compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Informational\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    Status == \"Unknown\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    \"Unknown\"\r\n)\r\n| extend RecommendationLink = case(\r\n    Recommendation startswith \"http\", Recommendation,\r\n    \"\"\r\n)\r\n| extend RecommendationTooltip = Recommendation\r\n| project ConfigName, ['Display name'] = DisplayName, ['Current value'] = ConfigValue, ['Recommended value'] = RecommendedValue, ['Default value'] = DefaultValue, Status, Severity, Recommendation, RecommendationLink, RecommendationTooltip, Description, ['Mitre tactics'] = t_MitreTactic, ['Mitre techniques'] = t_MitreTechnique, ['Mitre mitigations'] = t_MitreMitigation, PortalDeepLink, Configuration = ConfigGroup",
          "size": 0,
          "showAnalytics": true,
          "title": "Authentication Methods: Temporary Access Pass",
          "timeContext": {
            "durationMs": 86400000
          },
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "crossComponentResources": [
            "{SelectLogAnalytics}"
          ],
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "Group",
                "formatter": 1
              },
              {
                "columnMatch": "ConfigName",
                "formatter": 5
              },
              {
                "columnMatch": "Display name",
                "formatter": 0,
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Current value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "PortalDeepLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Recommended value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "RecommendationLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"RecommendationTooltip\"]"
                }
              },
              {
                "columnMatch": "Status",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Passed",
                      "representation": "success",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Failed",
                      "representation": "4",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Verify",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Review",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Informational",
                      "representation": "1",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "unknown",
                      "text": "{0}{1}"
                    }
                  ]
                }
              },
              {
                "columnMatch": "Severity",
                "formatter": 5
              },
              {
                "columnMatch": "Recommendation",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationLink",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationTooltip",
                "formatter": 5
              },
              {
                "columnMatch": "Description",
                "formatter": 5
              },
              {
                "columnMatch": "PortalDeepLink",
                "formatter": 5
              },
              {
                "columnMatch": "Configuration",
                "formatter": 0,
                "formatOptions": {
                  "customColumnWidthSetting": "75px"
                },
                "tooltipFormat": {
                  "tooltip": "Used for grouping the controls to reflect the Azure Portal experience"
                }
              }
            ],
            "hierarchySettings": {
              "treeType": 1,
              "groupBy": [
                "Configuration"
              ],
              "expandTopLevel": true,
              "finalBy": "ConfigName"
            }
          }
        },
        "conditionalVisibility": {
          "parameterName": "ShowAuthMethodTAP",
          "comparison": "isEqualTo",
          "value": "True"
        },
        "name": "AuthMethodsTemporaryAccessPass",
        "styleSettings": {
          "showBorder": true
        }
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "{CustomTableName}\r\n//| where _odata_context_s has \"authenticationMethodConfigurations\"\r\n| where _odata_type_s == \"#microsoft.graph.softwareOathAuthenticationMethodConfiguration\"\r\n| extend ConfigType = _odata_type_s\r\n| summarize arg_max(TimeGenerated, *)\r\n| join kind=leftouter (\r\nexternaldata(ControlName: string, Description: string, GraphEndpoint: string, GraphUri: string, MitreTactic: dynamic, MitreTechnique: dynamic, MitreMitigation: dynamic, Controls: dynamic )\r\n[ \r\n    h@'{JsonMetadataUrl}'\r\n]\r\nwith(format='multijson')\r\n| where GraphUri == \"https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('SoftwareOath')\"\r\n// Control group level Mitre mappings (will be consolidated with the control level mappings)\r\n| extend g_MitreTactic = MitreTactic\r\n| extend g_MitreTechnique = MitreTechnique\r\n| extend g_MitreMitigation = MitreMitigation\r\n| project-away MitreTactic, MitreTechnique, MitreMitigation\r\n| mv-expand Control = Controls\r\n| extend ConfigType = \"#microsoft.graph.softwareOathAuthenticationMethodConfiguration\"\r\n| project-away Controls\r\n| evaluate bag_unpack(Control, columnsConflict='replace_source')\r\n| extend ConfigMapping = replace_string(CurrentValue, \".\", \"_\")\r\n// Consolidate control level and control group level Mitre mappings\r\n| extend t_MitreTactic = array_sort_asc(array_concat(g_MitreTactic, MitreTactic))\r\n| extend t_MitreTechnique = array_sort_asc(array_concat(g_MitreTechnique, MitreTechnique))\r\n| extend t_MitreMitigation = array_sort_asc(array_concat(g_MitreMitigation, MitreMitigation))\r\n| project ConfigName = tostring(Name), ConfigMapping, ConfigType, DisplayName, Description, DefaultValue, RecommendedValue, Recommendation, Severity, t_MitreTactic, t_MitreTechnique, t_MitreMitigation, PortalDeepLink\r\n) on ConfigType\r\n| extend ConfigGroup = case(\r\n    ConfigName startswith \"numberMatching\", \"Require number matching for push notifications\",\r\n    ConfigName startswith \"displayAppInformation\", \"Show application name in push and passwordless notifications\",\r\n    ConfigName startswith \"displayLocationInformation\", \"Show geographic location in push and passwordless notifications\",\r\n    \"General settings\"\r\n)\r\n| extend Pack = pack_all()\r\n| extend ConfigValue = case(\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_s\")])), tostring(Pack[strcat(ConfigMapping, \"_s\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_g\")])), tostring(Pack[strcat(ConfigMapping, \"_g\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_b\")])), tostring(Pack[strcat(ConfigMapping, \"_b\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_d\")])), tostring(Pack[strcat(ConfigMapping, \"_d\")]),\r\n    tostring(Pack[strcat(ConfigMapping, \"_s\")])\r\n)\r\n| extend ControlCompliance = case(\r\n    ConfigValue == \"\" and RecommendedValue  == \"\", \"Compliant\",\r\n    ConfigValue != \"\" and RecommendedValue  == \"\", \"Unknown\",\r\n    ConfigValue == RecommendedValue, \"Compliant\",\r\n    ConfigValue != RecommendedValue, \"NonCompliant\",\r\n    \"Unknown\"\r\n)\r\n| extend Status = case(\r\n    ControlCompliance == \"Compliant\", \"Passed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"High\", \"Failed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"Medium\", \"Review\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"High\", \"Verify\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"Medium\", \"Verify\",\r\n    Severity == \"Informational\", \"Informational\",\r\n    \"Verify\"\r\n)\r\n| extend StatusTooltip = case(\r\n    Status == \"Passed\", \"The current configuration is compliant with the recommendation.\",\r\n    Status == \"Failed\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Review\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Verify\", strcat(\"Unable to determine, whether the current configuration is compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Informational\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    Status == \"Unknown\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    \"Unknown\"\r\n)\r\n| extend RecommendationLink = case(\r\n    Recommendation startswith \"http\", Recommendation,\r\n    \"\"\r\n)\r\n| extend RecommendationTooltip = Recommendation\r\n| project ConfigName, ['Display name'] = DisplayName, ['Current value'] = ConfigValue, ['Recommended value'] = RecommendedValue, ['Default value'] = DefaultValue, Status, Severity, Recommendation, RecommendationLink, RecommendationTooltip, Description, ['Mitre tactics'] = t_MitreTactic, ['Mitre techniques'] = t_MitreTechnique, ['Mitre mitigations'] = t_MitreMitigation, PortalDeepLink, Configuration = ConfigGroup",
          "size": 0,
          "showAnalytics": true,
          "title": "Authentication Methods: Third-party software OAUTH tokens",
          "timeContext": {
            "durationMs": 86400000
          },
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "crossComponentResources": [
            "{SelectLogAnalytics}"
          ],
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "Group",
                "formatter": 1
              },
              {
                "columnMatch": "ConfigName",
                "formatter": 5
              },
              {
                "columnMatch": "Display name",
                "formatter": 0,
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Current value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "PortalDeepLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Recommended value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "RecommendationLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"RecommendationTooltip\"]"
                }
              },
              {
                "columnMatch": "Status",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Passed",
                      "representation": "success",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Failed",
                      "representation": "4",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Verify",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Review",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Informational",
                      "representation": "1",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "unknown",
                      "text": "{0}{1}"
                    }
                  ]
                }
              },
              {
                "columnMatch": "Severity",
                "formatter": 5
              },
              {
                "columnMatch": "Recommendation",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationLink",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationTooltip",
                "formatter": 5
              },
              {
                "columnMatch": "Description",
                "formatter": 5
              },
              {
                "columnMatch": "PortalDeepLink",
                "formatter": 5
              },
              {
                "columnMatch": "Configuration",
                "formatter": 0,
                "formatOptions": {
                  "customColumnWidthSetting": "75px"
                },
                "tooltipFormat": {
                  "tooltip": "Used for grouping the controls to reflect the Azure Portal experience"
                }
              }
            ],
            "hierarchySettings": {
              "treeType": 1,
              "groupBy": [
                "Configuration"
              ],
              "expandTopLevel": true,
              "finalBy": "ConfigName"
            }
          }
        },
        "conditionalVisibility": {
          "parameterName": "ShowAuthMethod3rdParty",
          "comparison": "isEqualTo",
          "value": "True"
        },
        "name": "AuthMethods3rdPartyOauthTokens",
        "styleSettings": {
          "showBorder": true
        }
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "{CustomTableName}\r\n//| where _odata_context_s has \"authenticationMethodConfigurations\"\r\n| where _odata_type_s == \"#microsoft.graph.emailAuthenticationMethodConfiguration\"\r\n| extend ConfigType = _odata_type_s\r\n| summarize arg_max(TimeGenerated, *)\r\n| join kind=leftouter (\r\nexternaldata(ControlName: string, Description: string, GraphEndpoint: string, GraphUri: string, MitreTactic: dynamic, MitreTechnique: dynamic, MitreMitigation: dynamic, Controls: dynamic )\r\n[ \r\n    h@'{JsonMetadataUrl}'\r\n]\r\nwith(format='multijson')\r\n| where GraphUri == \"https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('Email')\"\r\n// Control group level Mitre mappings (will be consolidated with the control level mappings)\r\n| extend g_MitreTactic = MitreTactic\r\n| extend g_MitreTechnique = MitreTechnique\r\n| extend g_MitreMitigation = MitreMitigation\r\n| project-away MitreTactic, MitreTechnique, MitreMitigation\r\n| mv-expand Control = Controls\r\n| extend ConfigType = \"#microsoft.graph.emailAuthenticationMethodConfiguration\"\r\n| project-away Controls\r\n| evaluate bag_unpack(Control, columnsConflict='replace_source')\r\n| extend ConfigMapping = replace_string(CurrentValue, \".\", \"_\")\r\n// Consolidate control level and control group level Mitre mappings\r\n| extend t_MitreTactic = array_sort_asc(array_concat(g_MitreTactic, MitreTactic))\r\n| extend t_MitreTechnique = array_sort_asc(array_concat(g_MitreTechnique, MitreTechnique))\r\n| extend t_MitreMitigation = array_sort_asc(array_concat(g_MitreMitigation, MitreMitigation))\r\n| project ConfigName = tostring(Name), ConfigMapping, ConfigType, DisplayName, Description, DefaultValue, RecommendedValue, Recommendation, Severity, t_MitreTactic, t_MitreTechnique, t_MitreMitigation, PortalDeepLink\r\n) on ConfigType\r\n| extend ConfigGroup = case(\r\n    ConfigName startswith \"numberMatching\", \"Require number matching for push notifications\",\r\n    ConfigName startswith \"displayAppInformation\", \"Show application name in push and passwordless notifications\",\r\n    ConfigName startswith \"displayLocationInformation\", \"Show geographic location in push and passwordless notifications\",\r\n    \"General settings\"\r\n)\r\n| extend Pack = pack_all()\r\n| extend ConfigValue = case(\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_s\")])), tostring(Pack[strcat(ConfigMapping, \"_s\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_g\")])), tostring(Pack[strcat(ConfigMapping, \"_g\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_b\")])), tostring(Pack[strcat(ConfigMapping, \"_b\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_d\")])), tostring(Pack[strcat(ConfigMapping, \"_d\")]),\r\n    tostring(Pack[strcat(ConfigMapping, \"_s\")])\r\n)\r\n| extend ControlCompliance = case(\r\n    ConfigValue == \"\" and RecommendedValue  == \"\", \"Compliant\",\r\n    ConfigValue != \"\" and RecommendedValue  == \"\", \"Unknown\",\r\n    ConfigValue == RecommendedValue, \"Compliant\",\r\n    ConfigValue != RecommendedValue, \"NonCompliant\",\r\n    \"Unknown\"\r\n)\r\n| extend Status = case(\r\n    ControlCompliance == \"Compliant\", \"Passed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"High\", \"Failed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"Medium\", \"Review\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"High\", \"Verify\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"Medium\", \"Verify\",\r\n    Severity == \"Informational\", \"Informational\",\r\n    \"Verify\"\r\n)\r\n| extend StatusTooltip = case(\r\n    Status == \"Passed\", \"The current configuration is compliant with the recommendation.\",\r\n    Status == \"Failed\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Review\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Verify\", strcat(\"Unable to determine, whether the current configuration is compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Informational\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    Status == \"Unknown\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    \"Unknown\"\r\n)\r\n| extend RecommendationLink = case(\r\n    Recommendation startswith \"http\", Recommendation,\r\n    \"\"\r\n)\r\n| extend RecommendationTooltip = Recommendation\r\n| project ConfigName, ['Display name'] = DisplayName, ['Current value'] = ConfigValue, ['Recommended value'] = RecommendedValue, ['Default value'] = DefaultValue, Status, Severity, Recommendation, RecommendationLink, RecommendationTooltip, Description, ['Mitre tactics'] = t_MitreTactic, ['Mitre techniques'] = t_MitreTechnique, ['Mitre mitigations'] = t_MitreMitigation, PortalDeepLink, Configuration = ConfigGroup",
          "size": 0,
          "showAnalytics": true,
          "title": "Authentication Methods: Email OTP",
          "timeContext": {
            "durationMs": 86400000
          },
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "crossComponentResources": [
            "{SelectLogAnalytics}"
          ],
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "Group",
                "formatter": 1
              },
              {
                "columnMatch": "ConfigName",
                "formatter": 5
              },
              {
                "columnMatch": "Display name",
                "formatter": 0,
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Current value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "PortalDeepLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Recommended value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "RecommendationLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"RecommendationTooltip\"]"
                }
              },
              {
                "columnMatch": "Status",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Passed",
                      "representation": "success",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Failed",
                      "representation": "4",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Verify",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Review",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Informational",
                      "representation": "1",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "unknown",
                      "text": "{0}{1}"
                    }
                  ]
                }
              },
              {
                "columnMatch": "Severity",
                "formatter": 5
              },
              {
                "columnMatch": "Recommendation",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationLink",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationTooltip",
                "formatter": 5
              },
              {
                "columnMatch": "Description",
                "formatter": 5
              },
              {
                "columnMatch": "PortalDeepLink",
                "formatter": 5
              },
              {
                "columnMatch": "Configuration",
                "formatter": 0,
                "formatOptions": {
                  "customColumnWidthSetting": "75px"
                },
                "tooltipFormat": {
                  "tooltip": "Used for grouping the controls to reflect the Azure Portal experience"
                }
              }
            ],
            "hierarchySettings": {
              "treeType": 1,
              "groupBy": [
                "Configuration"
              ],
              "expandTopLevel": true,
              "finalBy": "ConfigName"
            }
          }
        },
        "conditionalVisibility": {
          "parameterName": "ShowAuthMethodEmailOTP",
          "comparison": "isEqualTo",
          "value": "True"
        },
        "name": "AuthMethodsEmailOTP",
        "styleSettings": {
          "showBorder": true
        }
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "{CustomTableName}\r\n//| where _odata_context_s has \"authenticationMethodConfigurations\"\r\n| where _odata_type_s == \"#microsoft.graph.voiceAuthenticationMethodConfiguration\"\r\n| extend ConfigType = _odata_type_s\r\n| summarize arg_max(TimeGenerated, *)\r\n| join kind=leftouter (\r\nexternaldata(ControlName: string, Description: string, GraphEndpoint: string, GraphUri: string, MitreTactic: dynamic, MitreTechnique: dynamic, MitreMitigation: dynamic, Controls: dynamic )\r\n[ \r\n    h@'{JsonMetadataUrl}'\r\n]\r\nwith(format='multijson')\r\n| where GraphUri == \"https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('Voice')\"\r\n// Control group level Mitre mappings (will be consolidated with the control level mappings)\r\n| extend g_MitreTactic = MitreTactic\r\n| extend g_MitreTechnique = MitreTechnique\r\n| extend g_MitreMitigation = MitreMitigation\r\n| project-away MitreTactic, MitreTechnique, MitreMitigation\r\n| mv-expand Control = Controls\r\n| extend ConfigType = \"#microsoft.graph.voiceAuthenticationMethodConfiguration\"\r\n| project-away Controls\r\n| evaluate bag_unpack(Control, columnsConflict='replace_source')\r\n| extend ConfigMapping = replace_string(CurrentValue, \".\", \"_\")\r\n// Consolidate control level and control group level Mitre mappings\r\n| extend t_MitreTactic = array_sort_asc(array_concat(g_MitreTactic, MitreTactic))\r\n| extend t_MitreTechnique = array_sort_asc(array_concat(g_MitreTechnique, MitreTechnique))\r\n| extend t_MitreMitigation = array_sort_asc(array_concat(g_MitreMitigation, MitreMitigation))\r\n| project ConfigName = tostring(Name), ConfigMapping, ConfigType, DisplayName, Description, DefaultValue, RecommendedValue, Recommendation, Severity, t_MitreTactic, t_MitreTechnique, t_MitreMitigation, PortalDeepLink\r\n) on ConfigType\r\n| extend ConfigGroup = case(\r\n    ConfigName startswith \"numberMatching\", \"Require number matching for push notifications\",\r\n    ConfigName startswith \"displayAppInformation\", \"Show application name in push and passwordless notifications\",\r\n    ConfigName startswith \"displayLocationInformation\", \"Show geographic location in push and passwordless notifications\",\r\n    \"General settings\"\r\n)\r\n| extend Pack = pack_all()\r\n| extend ConfigValue = case(\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_s\")])), tostring(Pack[strcat(ConfigMapping, \"_s\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_g\")])), tostring(Pack[strcat(ConfigMapping, \"_g\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_b\")])), tostring(Pack[strcat(ConfigMapping, \"_b\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_d\")])), tostring(Pack[strcat(ConfigMapping, \"_d\")]),\r\n    tostring(Pack[strcat(ConfigMapping, \"_s\")])\r\n)\r\n| extend ControlCompliance = case(\r\n    ConfigValue == \"\" and RecommendedValue  == \"\", \"Compliant\",\r\n    ConfigValue != \"\" and RecommendedValue  == \"\", \"Unknown\",\r\n    ConfigValue == RecommendedValue, \"Compliant\",\r\n    ConfigValue != RecommendedValue, \"NonCompliant\",\r\n    \"Unknown\"\r\n)\r\n| extend Status = case(\r\n    ControlCompliance == \"Compliant\", \"Passed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"High\", \"Failed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"Medium\", \"Review\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"High\", \"Verify\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"Medium\", \"Verify\",\r\n    Severity == \"Informational\", \"Informational\",\r\n    \"Verify\"\r\n)\r\n| extend StatusTooltip = case(\r\n    Status == \"Passed\", \"The current configuration is compliant with the recommendation.\",\r\n    Status == \"Failed\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Review\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Verify\", strcat(\"Unable to determine, whether the current configuration is compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Informational\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    Status == \"Unknown\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    \"Unknown\"\r\n)\r\n| extend RecommendationLink = case(\r\n    Recommendation startswith \"http\", Recommendation,\r\n    \"\"\r\n)\r\n| extend RecommendationTooltip = Recommendation\r\n| project ConfigName, ['Display name'] = DisplayName, ['Current value'] = ConfigValue, ['Recommended value'] = RecommendedValue, ['Default value'] = DefaultValue, Status, Severity, Recommendation, RecommendationLink, RecommendationTooltip, Description, ['Mitre tactics'] = t_MitreTactic, ['Mitre techniques'] = t_MitreTechnique, ['Mitre mitigations'] = t_MitreMitigation, PortalDeepLink, Configuration = ConfigGroup",
          "size": 0,
          "showAnalytics": true,
          "title": "Authentication Methods: Voice call",
          "timeContext": {
            "durationMs": 86400000
          },
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "crossComponentResources": [
            "{SelectLogAnalytics}"
          ],
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "Group",
                "formatter": 1
              },
              {
                "columnMatch": "ConfigName",
                "formatter": 5
              },
              {
                "columnMatch": "Display name",
                "formatter": 0,
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Current value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "PortalDeepLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Recommended value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "RecommendationLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"RecommendationTooltip\"]"
                }
              },
              {
                "columnMatch": "Status",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Passed",
                      "representation": "success",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Failed",
                      "representation": "4",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Verify",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Review",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Informational",
                      "representation": "1",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "unknown",
                      "text": "{0}{1}"
                    }
                  ]
                }
              },
              {
                "columnMatch": "Severity",
                "formatter": 5
              },
              {
                "columnMatch": "Recommendation",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationLink",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationTooltip",
                "formatter": 5
              },
              {
                "columnMatch": "Description",
                "formatter": 5
              },
              {
                "columnMatch": "PortalDeepLink",
                "formatter": 5
              },
              {
                "columnMatch": "Configuration",
                "formatter": 0,
                "formatOptions": {
                  "customColumnWidthSetting": "75px"
                },
                "tooltipFormat": {
                  "tooltip": "Used for grouping the controls to reflect the Azure Portal experience"
                }
              }
            ],
            "hierarchySettings": {
              "treeType": 1,
              "groupBy": [
                "Configuration"
              ],
              "expandTopLevel": true,
              "finalBy": "ConfigName"
            }
          }
        },
        "conditionalVisibility": {
          "parameterName": "ShowAuthMethodVoiceCall",
          "comparison": "isEqualTo",
          "value": "True"
        },
        "name": "AuthMethodsVoiceCall",
        "styleSettings": {
          "showBorder": true
        }
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "{CustomTableName}\r\n//| where _odata_context_s has \"authenticationMethodConfigurations\"\r\n| where _odata_type_s == \"#microsoft.graph.smsAuthenticationMethodConfiguration\"\r\n| extend ConfigType = _odata_type_s\r\n| summarize arg_max(TimeGenerated, *)\r\n| join kind=leftouter (\r\nexternaldata(ControlName: string, Description: string, GraphEndpoint: string, GraphUri: string, MitreTactic: dynamic, MitreTechnique: dynamic, MitreMitigation: dynamic, Controls: dynamic )\r\n[ \r\n    h@'{JsonMetadataUrl}'\r\n]\r\nwith(format='multijson')\r\n| where GraphUri == \"https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('Sms')\"\r\n// Control group level Mitre mappings (will be consolidated with the control level mappings)\r\n| extend g_MitreTactic = MitreTactic\r\n| extend g_MitreTechnique = MitreTechnique\r\n| extend g_MitreMitigation = MitreMitigation\r\n| project-away MitreTactic, MitreTechnique, MitreMitigation\r\n| mv-expand Control = Controls\r\n| extend ConfigType = \"#microsoft.graph.smsAuthenticationMethodConfiguration\"\r\n| project-away Controls\r\n| evaluate bag_unpack(Control, columnsConflict='replace_source')\r\n| extend ConfigMapping = replace_string(CurrentValue, \".\", \"_\")\r\n// Consolidate control level and control group level Mitre mappings\r\n| extend t_MitreTactic = array_sort_asc(array_concat(g_MitreTactic, MitreTactic))\r\n| extend t_MitreTechnique = array_sort_asc(array_concat(g_MitreTechnique, MitreTechnique))\r\n| extend t_MitreMitigation = array_sort_asc(array_concat(g_MitreMitigation, MitreMitigation))\r\n| project ConfigName = tostring(Name), ConfigMapping, ConfigType, DisplayName, Description, DefaultValue, RecommendedValue, Recommendation, Severity, t_MitreTactic, t_MitreTechnique, t_MitreMitigation, PortalDeepLink\r\n) on ConfigType\r\n| extend ConfigGroup = case(\r\n    ConfigName startswith \"numberMatching\", \"Require number matching for push notifications\",\r\n    ConfigName startswith \"displayAppInformation\", \"Show application name in push and passwordless notifications\",\r\n    ConfigName startswith \"displayLocationInformation\", \"Show geographic location in push and passwordless notifications\",\r\n    \"General settings\"\r\n)\r\n| extend Pack = pack_all()\r\n| extend ConfigValue = case(\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_s\")])), tostring(Pack[strcat(ConfigMapping, \"_s\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_g\")])), tostring(Pack[strcat(ConfigMapping, \"_g\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_b\")])), tostring(Pack[strcat(ConfigMapping, \"_b\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_d\")])), tostring(Pack[strcat(ConfigMapping, \"_d\")]),\r\n    tostring(Pack[strcat(ConfigMapping, \"_s\")])\r\n)\r\n| extend ControlCompliance = case(\r\n    ConfigValue == \"\" and RecommendedValue  == \"\", \"Compliant\",\r\n    ConfigValue != \"\" and RecommendedValue  == \"\", \"Unknown\",\r\n    ConfigValue == RecommendedValue, \"Compliant\",\r\n    ConfigValue != RecommendedValue, \"NonCompliant\",\r\n    \"Unknown\"\r\n)\r\n| extend Status = case(\r\n    ControlCompliance == \"Compliant\", \"Passed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"High\", \"Failed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"Medium\", \"Review\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"High\", \"Verify\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"Medium\", \"Verify\",\r\n    Severity == \"Informational\", \"Informational\",\r\n    \"Verify\"\r\n)\r\n| extend StatusTooltip = case(\r\n    Status == \"Passed\", \"The current configuration is compliant with the recommendation.\",\r\n    Status == \"Failed\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Review\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Verify\", strcat(\"Unable to determine, whether the current configuration is compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Informational\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    Status == \"Unknown\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    \"Unknown\"\r\n)\r\n| extend RecommendationLink = case(\r\n    Recommendation startswith \"http\", Recommendation,\r\n    \"\"\r\n)\r\n| extend RecommendationTooltip = Recommendation\r\n| project ConfigName, ['Display name'] = DisplayName, ['Current value'] = ConfigValue, ['Recommended value'] = RecommendedValue, ['Default value'] = DefaultValue, Status, Severity, Recommendation, RecommendationLink, RecommendationTooltip, Description, ['Mitre tactics'] = t_MitreTactic, ['Mitre techniques'] = t_MitreTechnique, ['Mitre mitigations'] = t_MitreMitigation, PortalDeepLink, Configuration = ConfigGroup",
          "size": 0,
          "showAnalytics": true,
          "title": "Authentication Methods: SMS",
          "timeContext": {
            "durationMs": 86400000
          },
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "crossComponentResources": [
            "{SelectLogAnalytics}"
          ],
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "Group",
                "formatter": 1
              },
              {
                "columnMatch": "ConfigName",
                "formatter": 5
              },
              {
                "columnMatch": "Display name",
                "formatter": 0,
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Current value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "PortalDeepLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Recommended value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "RecommendationLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"RecommendationTooltip\"]"
                }
              },
              {
                "columnMatch": "Status",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Passed",
                      "representation": "success",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Failed",
                      "representation": "4",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Verify",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Review",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Informational",
                      "representation": "1",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "unknown",
                      "text": "{0}{1}"
                    }
                  ]
                }
              },
              {
                "columnMatch": "Severity",
                "formatter": 5
              },
              {
                "columnMatch": "Recommendation",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationLink",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationTooltip",
                "formatter": 5
              },
              {
                "columnMatch": "Description",
                "formatter": 5
              },
              {
                "columnMatch": "PortalDeepLink",
                "formatter": 5
              },
              {
                "columnMatch": "Configuration",
                "formatter": 0,
                "formatOptions": {
                  "customColumnWidthSetting": "75px"
                },
                "tooltipFormat": {
                  "tooltip": "Used for grouping the controls to reflect the Azure Portal experience"
                }
              }
            ],
            "hierarchySettings": {
              "treeType": 1,
              "groupBy": [
                "Configuration"
              ],
              "expandTopLevel": true,
              "finalBy": "ConfigName"
            }
          }
        },
        "conditionalVisibility": {
          "parameterName": "ShowAuthMethodSMS",
          "comparison": "isEqualTo",
          "value": "True"
        },
        "name": "AuthMethodsSMS",
        "styleSettings": {
          "showBorder": true
        }
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "{CustomTableName}\r\n//| where _odata_context_s has \"authenticationMethodConfigurations\"\r\n| where _odata_type_s == \"#microsoft.graph.x509CertificateAuthenticationMethodConfiguration\"\r\n| extend ConfigType = _odata_type_s\r\n| summarize arg_max(TimeGenerated, *)\r\n| join kind=leftouter (\r\nexternaldata(ControlName: string, Description: string, GraphEndpoint: string, GraphUri: string, MitreTactic: dynamic, MitreTechnique: dynamic, MitreMitigation: dynamic, Controls: dynamic )\r\n[ \r\n    h@'{JsonMetadataUrl}'\r\n]\r\nwith(format='multijson')\r\n| where GraphUri == \"https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy/authenticationMethodConfigurations('X509Certificate')\"\r\n// Control group level Mitre mappings (will be consolidated with the control level mappings)\r\n| extend g_MitreTactic = MitreTactic\r\n| extend g_MitreTechnique = MitreTechnique\r\n| extend g_MitreMitigation = MitreMitigation\r\n| project-away MitreTactic, MitreTechnique, MitreMitigation\r\n| mv-expand Control = Controls\r\n| extend ConfigType = \"#microsoft.graph.x509CertificateAuthenticationMethodConfiguration\"\r\n| project-away Controls\r\n| evaluate bag_unpack(Control, columnsConflict='replace_source')\r\n| extend ConfigMapping = replace_string(CurrentValue, \".\", \"_\")\r\n// Consolidate control level and control group level Mitre mappings\r\n| extend t_MitreTactic = array_sort_asc(array_concat(g_MitreTactic, MitreTactic))\r\n| extend t_MitreTechnique = array_sort_asc(array_concat(g_MitreTechnique, MitreTechnique))\r\n| extend t_MitreMitigation = array_sort_asc(array_concat(g_MitreMitigation, MitreMitigation))\r\n| project ConfigName = tostring(Name), ConfigMapping, ConfigType, DisplayName, Description, DefaultValue, RecommendedValue, Recommendation, Severity, t_MitreTactic, t_MitreTechnique, t_MitreMitigation, PortalDeepLink\r\n) on ConfigType\r\n| extend ConfigGroup = case(\r\n    ConfigName startswith \"numberMatching\", \"Require number matching for push notifications\",\r\n    ConfigName startswith \"displayAppInformation\", \"Show application name in push and passwordless notifications\",\r\n    ConfigName startswith \"displayLocationInformation\", \"Show geographic location in push and passwordless notifications\",\r\n    \"General settings\"\r\n)\r\n| extend Pack = pack_all()\r\n| extend ConfigValue = case(\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_s\")])), tostring(Pack[strcat(ConfigMapping, \"_s\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_g\")])), tostring(Pack[strcat(ConfigMapping, \"_g\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_b\")])), tostring(Pack[strcat(ConfigMapping, \"_b\")]),\r\n    isnotempty(tostring(Pack[strcat(ConfigMapping, \"_d\")])), tostring(Pack[strcat(ConfigMapping, \"_d\")]),\r\n    tostring(Pack[strcat(ConfigMapping, \"_s\")])\r\n)\r\n| extend ControlCompliance = case(\r\n    ConfigValue == \"\" and RecommendedValue  == \"\", \"Compliant\",\r\n    ConfigValue != \"\" and RecommendedValue  == \"\", \"Unknown\",\r\n    ConfigValue == RecommendedValue, \"Compliant\",\r\n    ConfigValue != RecommendedValue, \"NonCompliant\",\r\n    \"Unknown\"\r\n)\r\n| extend Status = case(\r\n    ControlCompliance == \"Compliant\", \"Passed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"High\", \"Failed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"Medium\", \"Review\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"High\", \"Verify\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"Medium\", \"Verify\",\r\n    Severity == \"Informational\", \"Informational\",\r\n    \"Verify\"\r\n)\r\n| extend StatusTooltip = case(\r\n    Status == \"Passed\", \"The current configuration is compliant with the recommendation.\",\r\n    Status == \"Failed\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Review\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Verify\", strcat(\"Unable to determine, whether the current configuration is compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Informational\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    Status == \"Unknown\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    \"Unknown\"\r\n)\r\n| extend RecommendationLink = case(\r\n    Recommendation startswith \"http\", Recommendation,\r\n    \"\"\r\n)\r\n| extend RecommendationTooltip = Recommendation\r\n| project ConfigName, ['Display name'] = DisplayName, ['Current value'] = ConfigValue, ['Recommended value'] = RecommendedValue, ['Default value'] = DefaultValue, Status, Severity, Recommendation, RecommendationLink, RecommendationTooltip, Description, ['Mitre tactics'] = t_MitreTactic, ['Mitre techniques'] = t_MitreTechnique, ['Mitre mitigations'] = t_MitreMitigation, PortalDeepLink, Configuration = ConfigGroup",
          "size": 0,
          "showAnalytics": true,
          "title": "Authentication Methods: Certificate-based authentication",
          "timeContext": {
            "durationMs": 86400000
          },
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "crossComponentResources": [
            "{SelectLogAnalytics}"
          ],
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "Group",
                "formatter": 1
              },
              {
                "columnMatch": "ConfigName",
                "formatter": 5
              },
              {
                "columnMatch": "Display name",
                "formatter": 0,
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Current value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "PortalDeepLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Recommended value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "RecommendationLink",
                  "linkTarget": "Url"
                },
                "tooltipFormat": {
                  "tooltip": "[\"RecommendationTooltip\"]"
                }
              },
              {
                "columnMatch": "Status",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Passed",
                      "representation": "success",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Failed",
                      "representation": "4",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Verify",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Review",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Informational",
                      "representation": "1",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "unknown",
                      "text": "{0}{1}"
                    }
                  ]
                }
              },
              {
                "columnMatch": "Severity",
                "formatter": 5
              },
              {
                "columnMatch": "Recommendation",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationLink",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationTooltip",
                "formatter": 5
              },
              {
                "columnMatch": "Description",
                "formatter": 5
              },
              {
                "columnMatch": "PortalDeepLink",
                "formatter": 5
              },
              {
                "columnMatch": "Configuration",
                "formatter": 0,
                "formatOptions": {
                  "customColumnWidthSetting": "75px"
                },
                "tooltipFormat": {
                  "tooltip": "Used for grouping the controls to reflect the Azure Portal experience"
                }
              }
            ],
            "hierarchySettings": {
              "treeType": 1,
              "groupBy": [
                "Configuration"
              ],
              "expandTopLevel": true,
              "finalBy": "ConfigName"
            }
          }
        },
        "conditionalVisibility": {
          "parameterName": "ShowAuthMethodCert",
          "comparison": "isEqualTo",
          "value": "True"
        },
        "name": "AuthMethodsCertificate",
        "styleSettings": {
          "showBorder": true
        }
      },
      {
        "type": 3,
        "content": {
          "version": "KqlItem/1.0",
          "query": "let SettingsName = \"Default Settings - Consent Policy Settings\";\r\n{CustomTableName}\r\n| where _odata_context_s == \"https://graph.microsoft.com/beta/$metadata#settings\"\r\n| extend Properties = todynamic(value_s)[0]\r\n| extend SettingsDisplayName = Properties.displayName\r\n| where SettingsDisplayName == \"Consent Policy Settings\"\r\n| extend ControlName = SettingsName\r\n| project-away value_s\r\n| summarize arg_max(TimeGenerated, *)\r\n| mv-expand Config = Properties.values\r\n| extend ConfigName = tostring(Config.name)\r\n| extend ConfigValue = tostring(Config.value)\r\n| project-away Config\r\n| join kind=leftouter (\r\n    externaldata(ControlName: string, Description: string, GraphEndpoint: string, GraphUri: string, MitreTactic: dynamic, MitreTechnique: dynamic, MitreMitigation: dynamic, Controls: dynamic)\r\n    [ \r\n    h@'{JsonMetadataUrl}'\r\n    ]\r\n    with(format='multijson')\r\n    | where ControlName == SettingsName\r\n    // Control group level Mitre mappings (will be consolidated with the control level mappings)\r\n    | extend g_MitreTactic = MitreTactic\r\n    | extend g_MitreTechnique = MitreTechnique\r\n    | extend g_MitreMitigation = MitreMitigation\r\n    | project-away MitreTactic, MitreTechnique, MitreMitigation\r\n    | mv-expand Control = Controls\r\n    | project-away Controls\r\n    | evaluate bag_unpack(Control, columnsConflict='replace_source')\r\n    | extend ConfigMapping = replace_string(CurrentValue, \".\", \"_\")\r\n    // Consolidate control level and control group level Mitre mappings\r\n    | extend t_MitreTactic = array_sort_asc(array_concat(g_MitreTactic, MitreTactic))\r\n    | extend t_MitreTechnique = array_sort_asc(array_concat(g_MitreTechnique, MitreTechnique))\r\n    | extend t_MitreMitigation = array_sort_asc(array_concat(g_MitreMitigation, MitreMitigation))\r\n    | project\r\n        ConfigName = tostring(Name),\r\n        DisplayName,\r\n        Description,\r\n        DefaultValue,\r\n        RecommendedValue,\r\n        Recommendation,\r\n        Severity,\r\n        t_MitreTactic,\r\n        t_MitreTechnique,\r\n        t_MitreMitigation,\r\n        PortalDeepLink\r\n    ) on ConfigName\r\n| extend ControlCompliance = case(\r\n    ConfigValue == \"\" and RecommendedValue == \"\", \"Compliant\",\r\n    ConfigValue != \"\" and RecommendedValue == \"\", \"Unknown\",\r\n    ConfigValue == RecommendedValue, \"Compliant\",\r\n    ConfigValue != RecommendedValue, \"NonCompliant\",\r\n    \"Unknown\"\r\n    )\r\n| extend Status = case(\r\n    ControlCompliance == \"Compliant\", \"Passed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"High\", \"Failed\",\r\n    ControlCompliance == \"NonCompliant\" and Severity == \"Medium\", \"Review\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"High\", \"Verify\",\r\n    ControlCompliance == \"Unknown\" and Severity == \"Medium\", \"Verify\",\r\n    Severity == \"Informational\", \"Informational\",\r\n    \"Verify\"\r\n    )\r\n| extend StatusTooltip = case(\r\n    Status == \"Passed\", \"The current configuration is compliant with the recommendation.\",\r\n    Status == \"Failed\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Review\", strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Verify\", strcat(\"Unable to determine, whether the current configuration is compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\r\n    Status == \"Informational\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    Status == \"Unknown\", \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\r\n    \"Unknown\"\r\n    )\r\n| extend RecommendationLink = case(\r\n    Recommendation startswith \"http\", Recommendation,\r\n    \"\"\r\n    )\r\n| extend RecommendationTooltip = Recommendation\r\n| project\r\n    ['Configuration'] = ConfigName,\r\n    ['Display name'] = DisplayName,\r\n    ['Current value'] = ConfigValue,\r\n    ['Recommended value'] = RecommendedValue,\r\n    ['Default value'] = DefaultValue,\r\n    Status,\r\n    StatusTooltip,\r\n    Severity,\r\n    Recommendation,\r\n    RecommendationLink,\r\n    RecommendationTooltip,\r\n    Description,\r\n    ['Mitre tactics'] = t_MitreTactic,\r\n    ['Mitre techniques'] = t_MitreTechnique,\r\n    ['Mitre mitigations'] = t_MitreMitigation,\r\n    PortalDeepLink\r\n    ",
          "size": 0,
          "showAnalytics": true,
          "title": "Default Settings - Consent Policy Settings",
          "timeContext": {
            "durationMs": 86400000
          },
          "showExportToExcel": true,
          "queryType": 0,
          "resourceType": "microsoft.operationalinsights/workspaces",
          "crossComponentResources": [
            "{SelectLogAnalytics}"
          ],
          "gridSettings": {
            "formatters": [
              {
                "columnMatch": "Configuration",
                "formatter": 0,
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Display name",
                "formatter": 0,
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Current value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "PortalDeepLink",
                  "linkTarget": "Url",
                  "customColumnWidthSetting": "150px"
                },
                "tooltipFormat": {
                  "tooltip": "[\"Description\"]"
                }
              },
              {
                "columnMatch": "Recommended value",
                "formatter": 1,
                "formatOptions": {
                  "linkColumn": "RecommendationLink",
                  "linkTarget": "Url",
                  "customColumnWidthSetting": "150px"
                },
                "tooltipFormat": {
                  "tooltip": "[\"RecommendationTooltip\"]"
                }
              },
              {
                "columnMatch": "Default value",
                "formatter": 0,
                "formatOptions": {
                  "customColumnWidthSetting": "150px"
                }
              },
              {
                "columnMatch": "Status",
                "formatter": 18,
                "formatOptions": {
                  "thresholdsOptions": "icons",
                  "thresholdsGrid": [
                    {
                      "operator": "==",
                      "thresholdValue": "Passed",
                      "representation": "success",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Review",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Verify",
                      "representation": "2",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Failed",
                      "representation": "4",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "==",
                      "thresholdValue": "Informational",
                      "representation": "1",
                      "text": "{0}{1}"
                    },
                    {
                      "operator": "Default",
                      "thresholdValue": null,
                      "representation": "unknown",
                      "text": "{0}{1}"
                    }
                  ]
                },
                "tooltipFormat": {
                  "tooltip": "[\"StatusTooltip\"]"
                }
              },
              {
                "columnMatch": "Severity",
                "formatter": 5
              },
              {
                "columnMatch": "Recommendation",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationLink",
                "formatter": 5
              },
              {
                "columnMatch": "RecommendationTooltip",
                "formatter": 5
              },
              {
                "columnMatch": "StatusTooltip",
                "formatter": 5
              },
              {
                "columnMatch": "Description",
                "formatter": 5
              },
              {
                "columnMatch": "PortalDeepLink",
                "formatter": 5
              }
            ]
          }
        },
        "conditionalVisibility": {
          "parameterName": "ShowConsentPolicySettings",
          "comparison": "isEqualTo",
          "value": "True"
        },
        "name": "Default Settings - Consent Policy Settings",
        "styleSettings": {
          "showBorder": true
        }
      },
      {
        "type": 1,
        "content": {
          "json": "**Application Management: Default Policy** - *Coming soon!*\r\n\r\n**Application Management: Custom policies** - *Coming soon!*\r\n\r\n**Consent Framework: Admin Consent Request** - *Coming soon!*\r\n\r\n**Consent Framework: Permission Grant** - *Coming soon!*\r\n\r\n**Cross Tenant Access Policy** - *Coming soon!*\r\n\r\n**Token Configuration: Token Issuance Policies** - *Coming soon!*\r\n\r\n**Token Configuration - Token Lifetime** - *Coming soon!*\r\n\r\n**Default Settings - Password Rule Settings** - *Coming soon!*\r\n\t\r\n**Default Settings - Classification and M365 Groups** - *Coming soon!*\r\n\t\r\n**Default Activity Timeout** - *Coming soon!*\r\n\t\r\n**External Identities** - *Coming soon!*\r\n",
          "style": "upsell"
        },
        "name": "text - 10"
      }
    ],
    "fallbackResourceIds": [],
    "fromTemplateId": "sentinel-UserWorkbook",
    "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
  }