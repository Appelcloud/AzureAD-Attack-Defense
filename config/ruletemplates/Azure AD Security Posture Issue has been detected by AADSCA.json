{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace": {
            "type": "String"
        }
    },
    "resources": [
        {
            "id": "[concat(resourceId('Microsoft.OperationalInsights/workspaces/providers', parameters('workspace'), 'Microsoft.SecurityInsights'),'/alertRules/05ae08c6-6c4a-4a6c-a9c1-8b3550092430')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/05ae08c6-6c4a-4a6c-a9c1-8b3550092430')]",
            "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
            "kind": "Scheduled",
            "apiVersion": "2022-09-01-preview",
            "properties": {
                "displayName": "Azure AD Security Posture Issue has been detected by AADSCA",
                "description": "",
                "severity": "Medium",
                "enabled": true,
                "query": "let ConfigLookback = 15m;\nAADSCA_CL\n| where _odata_context_s == \"https://graph.microsoft.com/beta/$metadata#policies/authorizationPolicy\"\n| where TimeGenerated > ago(ConfigLookback)\n| extend ConfigSet = parse_json(value_s)\n| project-away value_s\n| mv-expand ConfigTmp = ConfigSet[0]\n| mv-expand SubConfig = ConfigTmp[\"defaultUserRolePermissions\"]\n| extend ConfigName = case( \n                          SubConfig == \"\",\n                          tostring(bag_keys(ConfigTmp)[0]),\n                          tostring(bag_keys(SubConfig)[0])\n                      )\n| extend ConfigValue = case(\n                           SubConfig == \"\",\n                           strcat_array(ConfigTmp[tostring(ConfigName)], \",\"),\n                           tostring((SubConfig[ConfigName]))\n                       )\n| where ConfigName !in (\"id\", \"description\", \"displayName\")\n| project TimeGenerated, ConfigName, ConfigValue //, ConfigSet, ConfigTmp, SubConfig\n| join kind=leftouter (\n    externaldata(ControlName: string, Description: string, GraphEndpoint: string, GraphUri: string, MitreTactic: dynamic, MitreTechnique: dynamic, MitreMitigation: dynamic, Controls: dynamic)\n    [\n    h@\"https://raw.githubusercontent.com/Cloud-Architekt/AzureAD-Attack-Defense/Chapter6-AadSecConfig/config/AadSecConfig.json\"\n    ]\n    with(format='multijson')\n    | where GraphEndpoint == \"authorizationPolicy\"\n    // Control group level Mitre mappings (will be consolidated with the control level mappings)\n    | extend g_MitreTactic = MitreTactic\n    | extend g_MitreTechnique = MitreTechnique\n    | extend g_MitreMitigation = MitreMitigation\n    | project-away MitreTactic, MitreTechnique, MitreMitigation\n    | mv-expand Control = Controls\n    | project-away Controls\n    | evaluate bag_unpack(Control, columnsConflict='replace_source')\n    // Consolidate control level and control group level Mitre mappings\n    | extend t_MitreTactic = array_sort_asc(array_concat(g_MitreTactic, MitreTactic))\n    | extend t_MitreTechnique = array_sort_asc(array_concat(g_MitreTechnique, MitreTechnique))\n    | extend t_MitreMitigation = array_sort_asc(array_concat(g_MitreMitigation, MitreMitigation))\n    | project\n        ConfigName = tostring(Name),\n        DisplayName,\n        Description,\n        DefaultValue,\n        RecommendedValue,\n        Recommendation,\n        Severity,\n        t_MitreTactic,\n        t_MitreTechnique,\n        t_MitreMitigation,\n        PortalDeepLink\n    )\n    on ConfigName\n| extend ControlCompliance = case(\n                                 ConfigValue == \"\" and RecommendedValue == \"\",\n                                 \"Compliant\",\n                                 ConfigValue != \"\" and RecommendedValue == \"\",\n                                 \"Unknown\",\n                                 ConfigValue == RecommendedValue,\n                                 \"Compliant\",\n                                 ConfigValue != RecommendedValue,\n                                 \"NonCompliant\",\n                                 \"Unknown\"\n                             )\n| extend Status = case(\n                      ControlCompliance == \"Compliant\",\n                      \"Passed\",\n                      ControlCompliance == \"NonCompliant\" and Severity == \"High\",\n                      \"Failed\",\n                      ControlCompliance == \"NonCompliant\" and Severity == \"Medium\",\n                      \"Review\",\n                      ControlCompliance == \"Unknown\" and Severity == \"High\",\n                      \"Verify\",\n                      ControlCompliance == \"Unknown\" and Severity == \"Medium\",\n                      \"Verify\",\n                      Severity == \"Informational\",\n                      \"Informational\",\n                      \"Verify\"\n                  )\n| extend StatusTooltip = case(\n                             Status == \"Passed\",\n                             \"The current configuration is compliant with the recommendation.\",\n                             Status == \"Failed\",\n                             strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\n                             Status == \"Review\",\n                             strcat(\"The current configuration is not compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\n                             Status == \"Verify\",\n                             strcat(\"Unable to determine, whether the current configuration is compliant with the recommendation. The severity of this finding is considered '\", Severity, \"'.\"),\n                             Status == \"Informational\",\n                             \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\n                             Status == \"Unknown\",\n                             \"There is no security impliaction with this configuration, and therefore this finding is considered informational.\",\n                             \"Unknown\"\n                         )\n| extend RecommendationLink = case(\n                                  Recommendation startswith \"http\",\n                                  Recommendation,\n                                  \"\"\n                              )\n| extend RecommendationTooltip = Recommendation\n| join kind=inner (\n    AADSCA_CL\n    | where _odata_context_s == \"https://graph.microsoft.com/beta/$metadata#policies/authorizationPolicy\"\n    | where TimeGenerated <ago(ConfigLookback)\n    | summarize arg_max(TimeGenerated, *)\n    | extend ConfigSet = parse_json(value_s)\n    | project-away value_s\n    | mv-expand ConfigTmp = ConfigSet[0]\n    | mv-expand SubConfig = ConfigTmp[\"defaultUserRolePermissions\"]\n    | extend ConfigName = case( \n                          SubConfig == \"\",\n                          tostring(bag_keys(ConfigTmp)[0]),\n                          tostring(bag_keys(SubConfig)[0])\n                      )\n    | extend ConfigValue = case(\n                           SubConfig == \"\",\n                           strcat_array(ConfigTmp[tostring(ConfigName)], \",\"),\n                           tostring((SubConfig[ConfigName]))\n                       )\n    | where ConfigName !in (\"id\", \"description\", \"displayName\")\n    | project TimeGenerated, ConfigName, PreviousValue = ConfigValue\n    )\n    on $left.ConfigName == $right.ConfigName\n| project\n    TimeGenerated,\n    Configuration = ConfigName,\n    DisplayName = DisplayName,\n    CurrentValue = ConfigValue,\n    RecommendedValue = RecommendedValue,\n    PreviousValue,\n    PreviousValueTimeStamp = TimeGenerated1,\n    Recommendation,\n    RecommendationLink,\n    RecommendationTooltip,\n    DefaultValue,\n    Severity,\n    Status,\n    StatusTooltip,\n    MitreTactics = t_MitreTactic,\n    MitreTechniques = tostring(t_MitreTechnique),\n    MitreMitigations = t_MitreMitigation,\n    Description,\n    PortalDeepLink\n| where CurrentValue != PreviousValue and Status != \"Passed\"\n\n",
                "queryFrequency": "PT15M",
                "queryPeriod": "P1D",
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "suppressionDuration": "PT5H",
                "suppressionEnabled": false,
                "startTimeUtc": null,
                "tactics": [],
                "techniques": [],
                "alertRuleTemplateName": null,
                "incidentConfiguration": {
                    "createIncident": true,
                    "groupingConfiguration": {
                        "enabled": false,
                        "reopenClosedIncident": false,
                        "lookbackDuration": "PT5H",
                        "matchingMethod": "Selected",
                        "groupByEntities": [],
                        "groupByAlertDetails": [],
                        "groupByCustomDetails": []
                    }
                },
                "eventGroupingSettings": {
                    "aggregationKind": "AlertPerResult"
                },
                "alertDetailsOverride": {
                    "alertDisplayNameFormat": "Authorization policy change of {{Configuration}} in Azure AD.",
                    "alertDescriptionFormat": "The setting \"{{DisplayName}}\" has been changed from {{PreviousValue}} to {{CurrentValue}}.",
                    "alertTacticsColumnName": "MitreTactics",
                    "alertSeverityColumnName": "Severity"
                },
                "customDetails": {
                    "PreviousValue": "PreviousValue",
                    "CurrentValue": "CurrentValue",
                    "RecommendedValue": "RecommendedValue",
                    "Status": "Status",
                    "StatusDetails": "StatusTooltip"
                },
                "entityMappings": null,
                "sentinelEntitiesMappings": null,
                "templateVersion": null
            }
        }
    ]
}